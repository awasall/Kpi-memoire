{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _toConsumableArray from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\src\\\\ComponentLib\\\\Dashboard\\\\Dashboard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Table } from 'antd';\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport config from '../../constants/config';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Row, Button, Col, ButtonGroup } from 'react-bootstrap';\nimport ReactToPrint from \"react-to-print\";\nimport { ExportExcel } from '../../App/components/ExportExcel';\nimport columns from '../../App/components/SprintData';\nimport { tokenConfig, query, formatDate } from '../../App/utilitity';\nimport DateRange from '../../App/components/Date/DateRange';\nimport moment from 'moment';\nimport CanvasJSReact from '../../assets/canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nvar dashColumns = _toConsumableArray(columns);\n\ndashColumns.unshift({\n  title: 'Plateau',\n  dataIndex: 'projectName'\n}); // remove KPIs  &&  only show raw data extrated from JIRA\n\ndashColumns.splice(dashColumns.length - 2, 2);\nvar initPageSizeOptions = ['5', '10', '15', '20'];\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      pagination: {\n        defaultPageSize: 10,\n        pageSizeOptions: [].concat(initPageSizeOptions),\n        showSizeChanger: true\n      },\n      loading: false,\n      params: {},\n      initialPageSizeLength: initPageSizeOptions.length\n    };\n\n    _this.handleTableChange = function (pagination, filters, sorter) {\n      //console.log('pagination', pagination)\n      var pager = _objectSpread({}, _this.state.pagination);\n\n      pager.current = pagination.current;\n\n      var nextParams = _objectSpread({\n        pageSize: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        startDate: _this.state.startDate,\n        endDate: _this.state.endDate\n      }, filters);\n\n      _this.setState({\n        pagination: pager,\n        params: nextParams\n      });\n\n      _this.fetch(nextParams);\n    };\n\n    _this.fetch = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      // console.log('params:', params);\n      _this.setState({\n        loading: true\n      });\n\n      var theQuery = '';\n\n      if (params) {\n        theQuery = query(params);\n      }\n\n      Axios.get(\"\".concat(config.apiBaseUrl, \"/sprint/dashboard/\").concat(theQuery), tokenConfig()).then(function (res) {\n        var payload = res.data;\n\n        var pagination = _objectSpread({}, _this.state.pagination); // Read total count from server\n\n\n        pagination.total = payload.totalElements;\n\n        if (pagination.pageSizeOptions.length === _this.state.initialPageSizeLength) {\n          pagination.pageSizeOptions.push(pagination.total.toString()); // REORDER the numbers\n\n          pagination.pageSizeOptions.sort(function (a, b) {\n            return a - b;\n          });\n        } // Formating the data to be display\n\n\n        var DashboardData = payload.content.map(function (sprint) {\n          var name = sprint.name,\n              startDate = sprint.startDate,\n              endDate = sprint.endDate,\n              state = sprint.state,\n              nbIssues = sprint.nbIssues,\n              bugs = sprint.bugs,\n              usEngage = sprint.usEngage,\n              usRealise = sprint.usRealise,\n              stpEngage = sprint.stpEngage,\n              stpRealise = sprint.stpRealise,\n              completude = sprint.completude,\n              acceptanceUs = sprint.acceptanceUs,\n              dureeSprint = sprint.dureeSprint,\n              dureeEntreDeuxSprint = sprint.dureeEntreDeuxSprint,\n              acceleration = sprint.acceleration,\n              projectName = sprint.projectName;\n          return {\n            \"key\": sprint.id,\n            name: name,\n            startDate: startDate,\n            endDate: endDate,\n            state: state,\n            nbIssues: nbIssues,\n            bugs: bugs,\n            usEngage: usEngage,\n            usRealise: usRealise,\n            stpEngage: stpEngage,\n            stpRealise: stpRealise,\n            completude: completude,\n            acceptanceUs: acceptanceUs,\n            dureeSprint: dureeSprint,\n            dureeEntreDeuxSprint: dureeEntreDeuxSprint,\n            acceleration: acceleration,\n            projectName: projectName\n          };\n        });\n\n        _this.setState({\n          loading: false,\n          data: DashboardData,\n          pagination: pagination\n        });\n      }).catch(function (err) {\n        console.log('err', err);\n      });\n    };\n\n    _this.onPickDate = function (Value) {\n      _this.setState(Value);\n    };\n\n    _this.onDatePicked = function () {\n      if (_this.state.startDate && _this.state.endDate) {\n        var params = _this.state.params;\n        params.startDate = _this.state.startDate;\n        params.endDate = _this.state.endDate;\n\n        _this.fetch(params);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetch();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.boardId !== prevProps.boardId) {\n        this.fetch();\n      }\n    } // HANDLING DATE CHANGES\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var datagraph = [];\n      var i = 0;\n      this.DashboardData.forEach(function (element) {\n        datagraph.push({\n          x: i + 10,\n          y: element.completude,\n          label: element.name\n        });\n        i += 10;\n      });\n      var options = {\n        animationEnabled: true,\n        exportEnabled: true,\n        theme: \"light2\",\n        //\"light1\", \"dark1\", \"dark2\"\n        title: {\n          text: \"Taux d'accélération des sprints\"\n        },\n        axisY: {\n          includeZero: true\n        },\n        data: [{\n          type: \"column\",\n          //change type to bar, line, area, pie, etc\n          //indexLabel: \"{y}\", //Shows y value on all Data Points\n          indexLabelFontColor: \"#5A5757\",\n          indexLabelPlacement: \"outside\",\n          dataPoints: datagraph\n        }]\n      };\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(CanvasJSChart, {\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(Col, {\n        className: \"mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 4,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(ExportExcel, {\n        csvData: this.state.data,\n        fileName: \"Extraction - \" + formatDate(moment()),\n        columns: dashColumns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(ReactToPrint, {\n        trigger: function trigger() {\n          return React.createElement(Button, {\n            variant: \"danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, \"  \", React.createElement(\"i\", {\n            className: \"feather icon-file-text  mx-0 \",\n            style: {\n              fontSize: \"25px \"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }), \" \", React.createElement(\"span\", {\n            className: \"font-weight-bold\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, \"Pdf\"));\n        },\n        content: function content() {\n          return _this2.componentRef;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: 8,\n        xs: 12,\n        className: \"align-self-center text-right \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(DateRange, {\n        onPickDate: this.onPickDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.onDatePicked,\n        variant: \"outline-success\",\n        className: \"btn-icon  btn-rounded ml-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"feather icon-save\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        className: \"mt-2 justify-content-center \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(PerfectScrollbar, {\n        className: \"shadow-1 rounded \",\n        ref: function ref(el) {\n          return _this2.componentRef = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Table, {\n        columns: dashColumns // className='shadow-1 rounded'\n        //rowKey={record => record.registered}\n        ,\n        dataSource: this.state.data,\n        pagination: this.state.pagination,\n        loading: this.state.loading,\n        onChange: this.handleTableChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["C:\\Users\\a851272\\OneDrive - Atos\\Bureau\\KPI-Jira-Front-End-master\\src\\ComponentLib\\Dashboard\\Dashboard.js"],"names":["Table","React","Component","Axios","config","PerfectScrollbar","Row","Button","Col","ButtonGroup","ReactToPrint","ExportExcel","columns","tokenConfig","query","formatDate","DateRange","moment","CanvasJSReact","CanvasJS","CanvasJSChart","dashColumns","unshift","title","dataIndex","splice","length","initPageSizeOptions","Dashboard","state","data","pagination","defaultPageSize","pageSizeOptions","showSizeChanger","loading","params","initialPageSizeLength","handleTableChange","filters","sorter","pager","current","nextParams","pageSize","page","sortField","field","sortOrder","order","startDate","endDate","setState","fetch","undefined","theQuery","get","apiBaseUrl","then","res","payload","total","totalElements","push","toString","sort","a","b","DashboardData","content","map","sprint","name","nbIssues","bugs","usEngage","usRealise","stpEngage","stpRealise","completude","acceptanceUs","dureeSprint","dureeEntreDeuxSprint","acceleration","projectName","id","catch","err","console","log","onPickDate","Value","onDatePicked","prevProps","props","boardId","datagraph","i","forEach","element","x","y","label","options","animationEnabled","exportEnabled","theme","text","axisY","includeZero","type","indexLabelFontColor","indexLabelPlacement","dataPoints","fontSize","componentRef","el"],"mappings":"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","sourcesContent":["import { Table } from 'antd';\nimport React, { Component } from 'react'\nimport Axios from 'axios';\nimport config from '../../constants/config';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Row, Button, Col, ButtonGroup } from 'react-bootstrap';\nimport ReactToPrint from \"react-to-print\";\nimport { ExportExcel } from '../../App/components/ExportExcel';\nimport columns from '../../App/components/SprintData';\nimport { tokenConfig, query, formatDate } from '../../App/utilitity';\nimport DateRange from '../../App/components/Date/DateRange';\nimport moment from 'moment';\nimport CanvasJSReact from '../../assets/canvasjs.react';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst dashColumns = [...columns];\ndashColumns.unshift(\n    {\n        title: 'Plateau',\n        dataIndex: 'projectName'\n    }\n)\n// remove KPIs  &&  only show raw data extrated from JIRA\ndashColumns.splice(dashColumns.length - 2, 2);\n\nconst initPageSizeOptions = ['5', '10', '15', '20']\nclass Dashboard extends Component {\n    state = {\n        data: [],\n        pagination: {\n            defaultPageSize: 10,\n            pageSizeOptions: [...initPageSizeOptions],\n            showSizeChanger: true\n        },\n        loading: false,\n        params: {},\n        initialPageSizeLength: initPageSizeOptions.length\n    };\n    handleTableChange = (pagination, filters, sorter) => {\n        //console.log('pagination', pagination)\n        const pager = { ...this.state.pagination };\n        pager.current = pagination.current;\n        const nextParams = {\n            pageSize: pagination.pageSize,\n            page: pagination.current,\n            sortField: sorter.field,\n            sortOrder: sorter.order,\n            startDate: this.state.startDate,\n            endDate: this.state.endDate,\n            ...filters,\n        }\n        this.setState({\n            pagination: pager,\n            params: nextParams\n        });\n        this.fetch(nextParams);\n    }\n    fetch = (params = undefined) => {\n        // console.log('params:', params);\n        this.setState({ loading: true });\n        let theQuery = ''\n        if (params) {\n            theQuery = query(params)\n        }\n        Axios\n            .get(`${config.apiBaseUrl}/sprint/dashboard/${theQuery}`, tokenConfig())\n            .then(res => {\n                const payload = res.data;\n                const pagination = { ...this.state.pagination };\n                // Read total count from server\n                pagination.total = payload.totalElements;\n                if (pagination.pageSizeOptions.length === this.state.initialPageSizeLength) {\n                    pagination.pageSizeOptions.push(pagination.total.toString())\n                    // REORDER the numbers\n                    pagination.pageSizeOptions.sort((a, b) => a - b);\n                }\n                // Formating the data to be display\n                const DashboardData = payload.content.map(sprint => {\n                    const { name, startDate, endDate, state, nbIssues, bugs, usEngage, usRealise, stpEngage, stpRealise, completude, acceptanceUs,dureeSprint,dureeEntreDeuxSprint, acceleration, projectName } = sprint;\n                    return {\n                        \"key\": sprint.id,\n                        name, startDate, endDate, state, nbIssues, bugs, usEngage, usRealise, stpEngage, stpRealise, completude, acceptanceUs,dureeSprint,dureeEntreDeuxSprint, acceleration, projectName\n                    };\n                })\n                this.setState({\n                    loading: false,\n                    data: DashboardData,\n                    pagination,\n                });\n\n            })\n            .catch(err => {\n                console.log('err', err)\n            });\n\n    }\n    componentDidMount() {\n        this.fetch();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.boardId !== prevProps.boardId) {\n            this.fetch()\n        }\n    }\n\n    // HANDLING DATE CHANGES\n    onPickDate = (Value) => {\n        this.setState(Value)\n    }\n    onDatePicked = () => {\n        if (this.state.startDate && this.state.endDate) {\n            let params = this.state.params\n            params.startDate = this.state.startDate\n            params.endDate = this.state.endDate\n            this.fetch(params)\n        }\n    }\n\n    render() {\n        let datagraph=[];\n        let i = 0\n        this.DashboardData.forEach(element => {\n            datagraph.push({\n                x: i + 10,\n                y: element.completude,\n                label: element.name\n            });\n            i += 10;\n          });\n        const options = {\n\t\t\tanimationEnabled: true,\n\t\t\texportEnabled: true,\n\t\t\ttheme: \"light2\", //\"light1\", \"dark1\", \"dark2\"\n\t\t\ttitle:{\n\t\t\t\ttext: \"Taux d'accélération des sprints\"\n\t\t\t},\n\t\t\taxisY: {\n\t\t\t\tincludeZero: true\n\t\t\t},\n\t\t\tdata: [{\n\t\t\t\ttype: \"column\", //change type to bar, line, area, pie, etc\n\t\t\t\t//indexLabel: \"{y}\", //Shows y value on all Data Points\n\t\t\t\tindexLabelFontColor: \"#5A5757\",\n                \n\t\t\t\tindexLabelPlacement: \"outside\",\n\t\t\t\tdataPoints: datagraph\n\t\t\t}]\n\t\t}\n        return (\n            <><div>\n                <CanvasJSChart options={options} />\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n            </div><Col className='mt-1'>\n                    <Row>\n                        <Col sm={4} xs={12}>\n                            <ButtonGroup>\n                                <ExportExcel csvData={this.state.data} fileName={\"Extraction - \" + formatDate(moment())} columns={dashColumns} />\n                                <ReactToPrint\n                                    trigger={() => <Button variant=\"danger\">  <i className=\"feather icon-file-text  mx-0 \" style={{ fontSize: \"25px \" }}></i> <span className=\"font-weight-bold\">Pdf</span></Button>}\n                                    content={() => this.componentRef} />\n                            </ButtonGroup>\n                        </Col>\n                        <Col sm={8} xs={12} className=\"align-self-center text-right \">\n                            <DateRange onPickDate={this.onPickDate} />\n                            <Button onClick={this.onDatePicked} variant=\"outline-success\" className=\"btn-icon  btn-rounded ml-2\">\n                                <i className=\"feather icon-save\" aria-hidden=\"true\"></i>\n                            </Button>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"mt-2 justify-content-center \">\n                        <PerfectScrollbar className='shadow-1 rounded ' ref={el => (this.componentRef = el)}>\n                            <Table columns={dashColumns}\n                                // className='shadow-1 rounded'\n                                //rowKey={record => record.registered}\n                                dataSource={this.state.data}\n                                pagination={this.state.pagination}\n                                loading={this.state.loading}\n                                onChange={this.handleTableChange} />\n                        </PerfectScrollbar>\n                    </Row>\n                </Col></>\n        );\n    }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}