{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App/index';\nimport * as serviceWorker from './serviceWorker';\nimport config from './constants/config';\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport rootReducer from './store/reducers/rootReducer';\nvar store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk))); // Alert Options\n\nvar alertOptions = {\n  position: \"top center\"\n};\nvar app = React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  basename: config.basename,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(AlertProvider, Object.assign({\n  template: AlertTemplate\n}, alertOptions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}), React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}))));\nReactDOM.render(app, document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\Users\\a851272\\OneDrive - Atos\\Bureau\\KPI-Jira-Front-End-master\\src\\index.js"],"names":["React","ReactDOM","createStore","applyMiddleware","composeWithDevTools","thunk","Provider","BrowserRouter","App","serviceWorker","config","AlertProvider","AlertTemplate","rootReducer","store","alertOptions","position","app","basename","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASJ,QAAQ,IAAIK,aAArB,QAA0C,aAA1C;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,IAAMC,KAAK,GAAGZ,WAAW,CAACW,WAAD,EACrBT,mBAAmB,CACfD,eAAe,CAACE,KAAD,CADA,CADE,CAAzB,C,CAMA;;AACA,IAAMU,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;AAIA,IAAMC,GAAG,GACL,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAe,EAAA,QAAQ,EAAEJ,MAAM,CAACQ,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAe,EAAA,QAAQ,EAAEN;AAAzB,GAA4CG,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADJ,CADJ,CADJ;AAWAd,QAAQ,CAACkB,MAAT,CAAgBF,GAAhB,EAAqBG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB,E,CAEA;AACA;AACA;;AACAZ,aAAa,CAACa,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App/index';\nimport * as serviceWorker from './serviceWorker';\nimport config from './constants/config';\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport rootReducer from './store/reducers/rootReducer'\n\nconst store = createStore(rootReducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n);\n\n// Alert Options\nconst alertOptions = {\n    position: \"top center\"\n};\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename={config.basename}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n                {/* basename=\"/datta-able\" */}\n                <App />\n            </AlertProvider>\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}