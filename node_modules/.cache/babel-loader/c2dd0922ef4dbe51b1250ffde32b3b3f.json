{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//Query creator\n//const DATE_FORMAT = 'YYYY-MM-DD';\nexport var formatDate = function formatDate(moment) {\n  return moment.format('YYYY-MM-DD');\n};\nexport var query = function query(params) {\n  var theQuery = '';\n  if (params.page && params.pageSize) theQuery += \"?page=\".concat(params.page, \"&size=\").concat(params.pageSize);\n  if (params.sortField) theQuery += \"&sort=\".concat(params.sortField, \",\").concat(params.sortOrder === 'descend' ? 'desc' : 'asc');\n  if (params.state && params.state.length !== 0) theQuery += \"&state=\".concat(params.state[0]);\n\n  if (params.startDate && params.endDate) {\n    if (theQuery !== '') theQuery += \"&\";else theQuery += \"?\";\n    theQuery += \"startPeriod=\".concat(formatDate(params.startDate), \"&endPeriod=\").concat(formatDate(params.endDate));\n    console.log('theQuery', theQuery);\n  }\n\n  return theQuery;\n}; // Update the state \n\nvar updateObject = function updateObject(oldObject, updatedProperties) {\n  return _objectSpread({}, oldObject, {}, updatedProperties);\n}; // Setup config with token - helper function\n//initToken params is used by loaduser action if the user is logged in for the first time\n\n\nexport var tokenConfig = function tokenConfig() {\n  var initToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n  // Get token from state\n  var token = localStorage.getItem(\"token\");\n  if (initToken) token = initToken; // Headers\n\n  var config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; // If token, add to headers config\n\n  if (token) {\n    config.headers[\"Authorization\"] = \"Bearer \".concat(token);\n  }\n\n  return config;\n};\nexport var calculateAge = function calculateAge(birthday) {\n  // birthday is a date\n  birthday = new Date(birthday);\n  var ageDifMs = Date.now() - birthday.getTime();\n  var ageDate = new Date(ageDifMs); // miliseconds from epoch\n\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n}; //CHECK IF AN OBJECT IS EMPTY , mean equal to \"{}\" ; \n// return true if it's empty\n\nexport var objectIsEmpty = function objectIsEmpty(obj) {\n  // birthday is a date\n  return Object.entries(obj).length === 0 && obj.constructor === Object;\n}; //compute the date \n\nexport var dateFr = function dateFr() {\n  // les noms de jours / mois\n  var jours = [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"];\n  var mois = [\"janvier\", \"fevrier\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"aout\", \"septembre\", \"octobre\", \"novembre\", \"decembre\"]; // on recupere la date\n\n  var date = new Date(); // on construit le message\n\n  var message = jours[date.getDay()] + \" \"; // nom du jour\n\n  message += date.getDate() + \" \"; // numero du jour\n\n  message += mois[date.getMonth()] + \" \"; // mois\n\n  message += date.getFullYear();\n  return message;\n};\nexport default updateObject;","map":{"version":3,"sources":["C:\\Users\\a851272\\OneDrive - Atos\\Bureau\\KPI-Jira-Front-End-master\\src\\App\\utilitity\\index.js"],"names":["formatDate","moment","format","query","params","theQuery","page","pageSize","sortField","sortOrder","state","length","startDate","endDate","console","log","updateObject","oldObject","updatedProperties","tokenConfig","initToken","undefined","token","localStorage","getItem","config","headers","calculateAge","birthday","Date","ageDifMs","now","getTime","ageDate","Math","abs","getUTCFullYear","objectIsEmpty","obj","Object","entries","constructor","dateFr","jours","mois","date","message","getDay","getDate","getMonth","getFullYear"],"mappings":"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","sourcesContent":["//Query creator\n//const DATE_FORMAT = 'YYYY-MM-DD';\nexport const formatDate = (moment) => {\n    return moment.format('YYYY-MM-DD')\n};\nexport const query = (params) => {\n    let theQuery = ''\n    if (params.page && params.pageSize)\n        theQuery += `?page=${params.page}&size=${params.pageSize}`\n    if (params.sortField)\n        theQuery += `&sort=${params.sortField},${params.sortOrder === 'descend' ? 'desc' : 'asc'}`\n    if (params.state && params.state.length !== 0)\n        theQuery += `&state=${params.state[0]}`\n    if (params.startDate && params.endDate) {\n        if (theQuery !== '')\n            theQuery += \"&\"\n        else\n            theQuery += \"?\"\n        theQuery += `startPeriod=${formatDate(params.startDate)}&endPeriod=${formatDate(params.endDate)}`\n        console.log('theQuery', theQuery)\n    }\n    return theQuery;\n}\n\n// Update the state \nconst updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}\n\n// Setup config with token - helper function\n//initToken params is used by loaduser action if the user is logged in for the first time\nexport const tokenConfig = (initToken = undefined) => {\n    // Get token from state\n    let token = localStorage.getItem(\"token\")\n\n    if (initToken)\n        token = initToken\n\n    // Headers\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    // If token, add to headers config\n    if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n\n    return config;\n};\n\nexport const calculateAge = (birthday) => { // birthday is a date\n    birthday = new Date(birthday);\n    var ageDifMs = Date.now() - birthday.getTime();\n    var ageDate = new Date(ageDifMs); // miliseconds from epoch\n    return Math.abs(ageDate.getUTCFullYear() - 1970);\n}\n\n//CHECK IF AN OBJECT IS EMPTY , mean equal to \"{}\" ; \n// return true if it's empty\nexport const objectIsEmpty = (obj) => { // birthday is a date\n    return (Object.entries(obj).length === 0 && obj.constructor === Object)\n}\n\n//compute the date \nexport const dateFr = () => {\n    // les noms de jours / mois\n    let jours = [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"];\n    let mois = [\"janvier\", \"fevrier\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"aout\", \"septembre\", \"octobre\", \"novembre\", \"decembre\"];\n    // on recupere la date\n    let date = new Date();\n    // on construit le message\n    let message = jours[date.getDay()] + \" \";   // nom du jour\n    message += date.getDate() + \" \";   // numero du jour\n    message += mois[date.getMonth()] + \" \";   // mois\n    message += date.getFullYear();\n    return message;\n}\n\nexport default updateObject"]},"metadata":{},"sourceType":"module"}