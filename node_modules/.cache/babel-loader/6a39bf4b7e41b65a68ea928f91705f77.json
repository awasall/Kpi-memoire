{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\a851272\\\\OneDrive - Atos\\\\Bureau\\\\KPI-Jira-Front-End-master\\\\src\\\\App\\\\layout\\\\AdminLayout\\\\NavBar\\\\NavLeft\\\\NavSearch\\\\ProjectSearch.js\";\nimport React, { Component } from 'react';\nimport Aux from \"../../../../../../hoc/_Aux\";\nimport { Modal } from 'antd';\nimport { Input, AutoComplete } from 'antd';\nimport { InputGroup } from \"react-bootstrap\";\nimport Axios from 'axios';\nimport { tokenConfig } from '../../../../../utilitity';\nimport Board from '../../../../../components/Board';\nimport config from '../../../../../../constants/config';\nvar Option = AutoComplete.Option;\n\nvar ProjectSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectSearch, _Component);\n\n  function ProjectSearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjectSearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchResults: [],\n      selectedProject: null,\n      visible: false\n    };\n\n    _this.handleOk = function (e) {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.renderOption = function (project, key) {\n      return React.createElement(Option, {\n        key: project.id,\n        label: project.name,\n        project: project,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-left a-style\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, project.name)));\n    };\n\n    _this.onSelect = function (value, option) {\n      _this.setState({\n        selectedProject: option.props.project,\n        visible: true\n      });\n\n      _this.props.collapseMenu();\n    };\n\n    _this.handleSearch = function (value) {\n      if (value !== \"\") Axios.get(\"\".concat(config.apiBaseUrl, \"/project/search/\").concat(value), tokenConfig()).then(function (res) {\n        var results = res.data;\n\n        _this.setState({\n          searchResults: results\n        });\n      }).catch(function (err) {\n        console.error(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ProjectSearch, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedProject = _this$state.selectedProject,\n          searchResults = _this$state.searchResults,\n          visible = _this$state.visible;\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"input-group-alternative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(InputGroup.Prepend, {\n        className: \"search-btn btn btn-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"feather icon-search input-group-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"my-1 mx-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(AutoComplete, {\n        className: \"global-search\",\n        size: \"large\",\n        dataSource: searchResults.map(this.renderOption),\n        onSelect: this.onSelect,\n        onSearch: this.handleSearch,\n        allowClear: true,\n        optionLabelProp: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"\",\n        placeholder: \"Rechercher un project ...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))))), visible ? modal(selectedProject, this.handleOk, this.handleCancel) : null);\n    }\n  }]);\n\n  return ProjectSearch;\n}(Component);\n\nvar modal = function modal(project, handleOk, handleCancel) {\n  return React.createElement(Modal, {\n    title: project.name,\n    visible: true,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    width: 950,\n    destroyOnClose: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Board, {\n    projectId: project.id,\n    projectName: project.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }));\n};\n\nexport default ProjectSearch;","map":{"version":3,"sources":["C:\\Users\\a851272\\OneDrive - Atos\\Bureau\\KPI-Jira-Front-End-master\\src\\App\\layout\\AdminLayout\\NavBar\\NavLeft\\NavSearch\\ProjectSearch.js"],"names":["React","Component","Aux","Modal","Input","AutoComplete","InputGroup","Axios","tokenConfig","Board","config","Option","ProjectSearch","state","searchResults","selectedProject","visible","handleOk","e","setState","handleCancel","renderOption","project","key","id","name","onSelect","value","option","props","collapseMenu","handleSearch","get","apiBaseUrl","then","res","results","data","catch","err","console","error","map","modal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from \"../../../../../../hoc/_Aux\";\nimport { Modal } from 'antd';\nimport { Input, AutoComplete } from 'antd';\nimport {\n    InputGroup\n} from \"react-bootstrap\";\nimport Axios from 'axios';\nimport { tokenConfig } from '../../../../../utilitity';\nimport Board from '../../../../../components/Board';\nimport config from '../../../../../../constants/config';\n\nconst { Option } = AutoComplete;\nclass ProjectSearch extends Component {\n    state = {\n        searchResults: [],\n        selectedProject: null,\n        visible: false\n    };\n\n    handleOk = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    renderOption = (project, key) => {\n        return (\n            <Option key={project.id} label={project.name} project={project} >\n                <div className=\"text-left a-style\">\n                    <span className=\"text-uppercase\">{project.name}</span>\n                </div>\n            </Option>\n        );\n    }\n\n    onSelect = (value, option) => {\n        this.setState({\n            selectedProject: option.props.project,\n            visible: true\n        })\n        this.props.collapseMenu()\n    }\n\n    handleSearch = (value) => {\n        if (value !== \"\")\n            Axios\n                .get(`${config.apiBaseUrl}/project/search/${value}`, tokenConfig())\n                .then(res => {\n                    const results = res.data;\n                    this.setState({\n                        searchResults: results,\n                    });\n                })\n                .catch(err => {\n                    console.error(err);\n                })\n    }\n\n    render() {\n        const { selectedProject, searchResults, visible } = this.state;\n        return (\n            <Aux>\n                <InputGroup className=\"input-group-alternative\">\n                    <InputGroup.Prepend className=\"search-btn btn btn-light\">\n\n                        <i className=\"feather icon-search input-group-text\" />\n\n                        <div className=\"my-1 mx-1\">\n                            <AutoComplete\n                                className=\"global-search\"\n                                size=\"large\"\n                                dataSource={searchResults.map(this.renderOption)}\n                                onSelect={this.onSelect}\n                                onSearch={this.handleSearch}\n                                allowClear\n                                optionLabelProp=\"label\"\n                            >\n                                <Input className=\"\" placeholder=\"Rechercher un project ...\" />\n                            </AutoComplete>\n                        </div>\n                    </InputGroup.Prepend>\n                </InputGroup>\n                {visible ?\n                    modal(selectedProject, this.handleOk, this.handleCancel) :\n                    null\n                }\n            </Aux>\n        );\n    }\n}\n\nconst modal = (project, handleOk, handleCancel) => (\n    <Modal\n        title={project.name}\n        visible={true}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        width={950}\n        destroyOnClose={true}\n    >\n        <Board projectId={project.id} projectName={project.name} />\n    </Modal>)\n\n\nexport default ProjectSearch;"]},"metadata":{},"sourceType":"module"}