{"version":3,"sources":["App/components/Loader/Loading.js","ComponentLib/Authentication/SignIn/SignIn.js"],"names":["antIcon","fontSize","color","type","style","spin","Loading","props","fluid","className","indicator","children","Login","state","username","password","stayConnected","onSubmit","e","preventDefault","login","onChange","setState","target","name","value","onStayConnected","this","isAuthenticated","to","isLoading","placeholder","required","id","htmlFor","href","config","apiBaseUrl","React","Component","mapDispatchToProps","connect","auth"],"mappings":"qIAAA,wDAIMA,EAAU,SAACC,EAAUC,GAAX,OAAsB,kBAAC,IAAD,CAAMC,KAAK,UAAUC,MAAO,CAAEH,WAAUC,SAASG,MAAI,KAiB5EC,IAff,SAAiBC,GACb,OACI,oCACI,kBAAC,IAAD,CAAWC,OAAK,EAACC,UAAWF,EAAME,WAC9B,kBAAC,IAAD,CAAKA,UAAU,0BACX,kBAAC,IAAD,CAAMC,UAAWV,EAAQO,EAAMN,SAAUM,EAAML,UAEnD,kBAAC,IAAD,CAAKO,UAAU,0BACVF,EAAMI,c,sKCDrBC,E,2MACFC,MAAQ,CACJC,SAAU,GACVC,SAAU,GACVC,eAAe,G,EAQnBC,SAAW,SAAAC,GACPA,EAAEC,iBACF,EAAKZ,MAAMa,MAAM,EAAKP,MAAMC,SAAU,EAAKD,MAAME,SAAU,EAAKF,MAAMG,gB,EAG1EK,SAAW,SAAAH,GAAC,OAAI,EAAKI,SAAL,eAAiBJ,EAAEK,OAAOC,KAAON,EAAEK,OAAOE,S,EAE1DC,gBAAkB,SAAAR,GAAC,OAAI,EAAKI,SAAL,eAAiBJ,EAAEK,OAAOC,MAAQ,EAAKX,MAAMG,iB,wEAIhE,GAAIW,KAAKpB,MAAMqB,gBACX,OAAO,kBAAC,IAAD,CAAUC,GAAG,eAChB,IAAD,EAC2CF,KAAKd,MAA3CC,EADL,EACKA,SAAUC,EADf,EACeA,SAAUC,EADzB,EACyBA,cAC5B,OACI,kBAAC,IAAD,KAEI,yBAAKP,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,WACX,0BAAMA,UAAU,MAChB,0BAAMA,UAAU,QAChB,0BAAMA,UAAU,QAChB,0BAAMA,UAAU,OAEpB,yBAAKA,UAAU,QACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,uBAAGA,UAAU,mCAEjB,wBAAIA,UAAU,QAAd,cAC2B,IAAzBkB,KAAKpB,MAAMuB,UACT,kBAAC,IAAD,CAAS7B,SAAU,GAAIC,MAAM,WAE5B,0BAAMe,SAAUU,KAAKV,UAClB,yBAAKR,UAAU,oBACX,2BACIN,KAAK,OACLM,UAAU,eACVsB,YAAY,oBACZP,KAAK,WACLH,SAAUM,KAAKN,SACfI,MAAOX,EACPkB,UAAU,KAGlB,yBAAKvB,UAAU,oBACX,2BACIN,KAAK,WACLM,UAAU,eACVsB,YAAY,eACZP,KAAK,WACLH,SAAUM,KAAKN,SACfI,MAAOV,EACPiB,UAAU,KAGlB,yBAAKvB,UAAU,wBACX,yBAAKA,UAAU,mCACX,2BACIN,KAAK,WACLqB,KAAK,gBACLS,GAAG,mBACHZ,SAAUM,KAAKD,gBACfD,MAAOT,IAEX,2BAAOkB,QAAQ,mBAAmBzB,UAAU,MAA5C,yBAGR,4BAAQA,UAAU,iDAAiDN,KAAK,UAAxE,gBACA,uBAAGM,UAAU,mBAAb,IAAgC,uBAAG0B,KAAMC,IAAOC,WAAa,mCAA7B,gCAChC,uBAAG5B,UAAU,mBAAb,gCAA4D,uBAAG0B,KAAMC,IAAOC,WAAa,8CAA7B,+B,GApFpFC,IAAMC,WAuGpBC,EAAqB,CACvBpB,WAGWqB,uBATS,SAAA5B,GAAK,MAAK,CAC9Be,gBAAiBf,EAAM6B,KAAKd,gBAC5BE,UAAWjB,EAAM6B,KAAKZ,aAOcU,EAAzBC,CAA6C7B","file":"static/js/17.b326a9b9.chunk.js","sourcesContent":["import React from 'react'\nimport { Spin, Icon } from 'antd';\nimport { Container, Row } from 'react-bootstrap';\n\nconst antIcon = (fontSize, color) => (<Icon type=\"loading\" style={{ fontSize, color }} spin />);\n\nfunction Loading(props) {\n    return (\n        <>\n            <Container fluid className={props.className}>\n                <Row className=\"justify-content-center\">\n                    <Spin indicator={antIcon(props.fontSize, props.color)} />\n                </Row>\n                <Row className=\"justify-content-center\">\n                    {props.children}\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default Loading\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './../../../assets/scss/style.scss';\nimport Aux from \"../../../hoc/_Aux\";\n//import Breadcrumb from \"../../../App/layout/AdminLayout/Breadcrumb\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { login } from '../../../store/actions/authentication';\nimport config from '../../../constants/config';\nimport Loading from '../../../App/components/Loader/Loading';\n\n\nclass Login extends React.Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        stayConnected: false\n    };\n\n    static propTypes = {\n        login: PropTypes.func.isRequired,\n        isAuthenticated: PropTypes.bool\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        this.props.login(this.state.username, this.state.password, this.state.stayConnected);\n    };\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    onStayConnected = e => this.setState({ [e.target.name]: !this.state.stayConnected });\n\n    render() {\n\n        if (this.props.isAuthenticated) {\n            return <Redirect to=\"/dashboard\" />;\n        } else {\n            const { username, password, stayConnected } = this.state;\n            return (\n                <Aux>\n                    {/* <Breadcrumb/> */}\n                    <div className=\"auth-wrapper\">\n                        <div className=\"auth-content\">\n                            <div className=\"auth-bg\">\n                                <span className=\"r\" />\n                                <span className=\"r s\" />\n                                <span className=\"r s\" />\n                                <span className=\"r\" />\n                            </div>\n                            <div className=\"card\">\n                                <div className=\"card-body text-center\">\n                                    <div className=\"mb-4\">\n                                        <i className=\"feather icon-unlock auth-icon\" />\n                                    </div>\n                                    <h3 className=\"mb-4\">Connexion</h3>\n                                    {(this.props.isLoading === true) ?\n                                        <Loading fontSize={45} color=\"orange\" />\n                                        :\n                                        (<form onSubmit={this.onSubmit}>\n                                            <div className=\"input-group mb-3\">\n                                                <input\n                                                    type=\"text\"\n                                                    className=\"form-control\"\n                                                    placeholder=\"Nom d'utilisateur\"\n                                                    name=\"username\"\n                                                    onChange={this.onChange}\n                                                    value={username}\n                                                    required={true}\n                                                />\n                                            </div>\n                                            <div className=\"input-group mb-4\">\n                                                <input\n                                                    type=\"password\"\n                                                    className=\"form-control\"\n                                                    placeholder=\"Mot de passe\"\n                                                    name=\"password\"\n                                                    onChange={this.onChange}\n                                                    value={password}\n                                                    required={true}\n                                                />\n                                            </div>\n                                            <div className=\"form-group text-left\">\n                                                <div className=\"checkbox checkbox-fill d-inline\">\n                                                    <input\n                                                        type=\"checkbox\"\n                                                        name=\"stayConnected\"\n                                                        id=\"checkbox-fill-a1\"\n                                                        onChange={this.onStayConnected}\n                                                        value={stayConnected}\n                                                    />\n                                                    <label htmlFor=\"checkbox-fill-a1\" className=\"cr\"> Rester connect√©</label>\n                                                </div>\n                                            </div>\n                                            <button className=\"btn btn-success shadow-2 mb-4 font-weight-bold\" type=\"submit\">Se connecter</button>\n                                            <p className=\"mb-2 text-muted\"> <a href={config.apiBaseUrl + \"/secure/ForgotLoginDetails.jspa\"}>Impossible de se connecter?</a></p>\n                                            <p className=\"mb-0 text-muted\">Pas encore membre? Contacter <a href={config.apiBaseUrl + \"/secure/ContactAdministrators!default.jspa\"}>L'administrateur</a></p>\n                                        </form>\n                                        )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Aux>\n            );\n        }\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading\n});\n\nconst mapDispatchToProps = {\n    login\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"],"sourceRoot":""}