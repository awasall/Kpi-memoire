{"version":3,"sources":["App/components/Date/DateRange.js","ComponentLib/Dashboard/Dashboard.js"],"names":["DateRange","state","startDate","endDate","endOpen","disabledStartDate","valueOf","disabledEndDate","onChange","field","value","setState","props","onPickDate","onStartChange","onEndChange","handleStartOpenChange","open","handleEndOpenChange","this","disabledDate","format","placeholder","onOpenChange","size","Component","dashColumns","columns","unshift","title","dataIndex","splice","length","initPageSizeOptions","Dashboard","data","pagination","defaultPageSize","pageSizeOptions","showSizeChanger","loading","params","initialPageSizeLength","handleTableChange","filters","sorter","pager","current","nextParams","pageSize","page","sortField","sortOrder","order","fetch","undefined","theQuery","query","Axios","get","config","apiBaseUrl","tokenConfig","then","res","payload","total","totalElements","push","toString","sort","a","b","DashboardData","content","map","sprint","name","nbIssues","bugs","usEngage","usRealise","stpEngage","stpRealise","completude","acceptanceUs","acceleration","projectName","id","catch","err","console","log","Value","onDatePicked","prevProps","boardId","Col","className","Row","sm","xs","ButtonGroup","ExportExcel","csvData","fileName","formatDate","moment","trigger","Button","variant","style","fontSize","componentRef","onClick","aria-hidden","ref","el","dataSource"],"mappings":"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","file":"static/js/22.c10ab2da.chunk.js","sourcesContent":["import { DatePicker } from 'antd';\nimport React, { Component } from 'react'\n\nexport default class DateRange extends Component {\n    state = {\n        startDate: null,\n        endDate: null,\n        endOpen: false,\n    };\n\n    disabledStartDate = startDate => {\n        const { endDate } = this.state;\n        if (!startDate || !endDate) {\n            return false;\n        }\n        return startDate.valueOf() > endDate.valueOf();\n    };\n\n    disabledEndDate = endDate => {\n        const { startDate } = this.state;\n        if (!endDate || !startDate) {\n            return false;\n        }\n        return endDate.valueOf() <= startDate.valueOf();\n    };\n\n    onChange = (field, value) => {\n        this.setState({\n            [field]: value,\n        });\n        this.props.onPickDate({ [field]: value })\n    };\n\n    onStartChange = value => {\n        this.onChange('startDate', value);\n    };\n\n    onEndChange = value => {\n        this.onChange('endDate', value);\n    };\n\n    handleStartOpenChange = open => {\n        if (!open) {\n            this.setState({ endOpen: true });\n        }\n    };\n\n    handleEndOpenChange = open => {\n        this.setState({ endOpen: open });\n    };\n\n    render() {\n        const { startDate, endDate, endOpen } = this.state;\n        return (\n            <>\n                <DatePicker\n                    disabledDate={this.disabledStartDate}\n                    //showTime\n                    format=\"DD-MM-YYYY\"\n                    value={startDate}\n                    placeholder=\"DÃ©but\"\n                    onChange={this.onStartChange}\n                    onOpenChange={this.handleStartOpenChange}\n                    size={\"large\"}\n                />\n                {'   '}\n                <DatePicker\n                    disabledDate={this.disabledEndDate}\n                    //showTime\n                    format=\"DD-MM-YYYY\"\n                    value={endDate}\n                    placeholder=\"Fin\"\n                    onChange={this.onEndChange}\n                    open={endOpen}\n                    onOpenChange={this.handleEndOpenChange}\n                    size={\"large\"}\n                />\n            </>\n        );\n    }\n}\n","import { Table } from 'antd';\nimport React, { Component } from 'react'\nimport Axios from 'axios';\nimport config from '../../constants/config';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Row, Button, Col, ButtonGroup } from 'react-bootstrap';\nimport ReactToPrint from \"react-to-print\";\nimport { ExportExcel } from '../../App/components/ExportExcel';\nimport columns from '../../App/components/SprintData';\nimport { tokenConfig, query, formatDate } from '../../App/utilitity';\nimport DateRange from '../../App/components/Date/DateRange';\nimport moment from 'moment';\n\nconst dashColumns = [...columns];\ndashColumns.unshift(\n    {\n        title: 'Plateau',\n        dataIndex: 'projectName'\n    }\n)\n// remove KPIs  &&  only show raw data extrated from JIRA\ndashColumns.splice(dashColumns.length - 2, 2);\n\nconst initPageSizeOptions = ['5', '10', '15', '20']\nclass Dashboard extends Component {\n    state = {\n        data: [],\n        pagination: {\n            defaultPageSize: 10,\n            pageSizeOptions: [...initPageSizeOptions],\n            showSizeChanger: true\n        },\n        loading: false,\n        params: {},\n        initialPageSizeLength: initPageSizeOptions.length\n    };\n    handleTableChange = (pagination, filters, sorter) => {\n        //console.log('pagination', pagination)\n        const pager = { ...this.state.pagination };\n        pager.current = pagination.current;\n        const nextParams = {\n            pageSize: pagination.pageSize,\n            page: pagination.current,\n            sortField: sorter.field,\n            sortOrder: sorter.order,\n            startDate: this.state.startDate,\n            endDate: this.state.endDate,\n            ...filters,\n        }\n        this.setState({\n            pagination: pager,\n            params: nextParams\n        });\n        this.fetch(nextParams);\n    }\n    fetch = (params = undefined) => {\n        // console.log('params:', params);\n        this.setState({ loading: true });\n        let theQuery = ''\n        if (params) {\n            theQuery = query(params)\n        }\n        Axios\n            .get(`${config.apiBaseUrl}/sprint/dashboard/${theQuery}`, tokenConfig())\n            .then(res => {\n                const payload = res.data;\n                const pagination = { ...this.state.pagination };\n                // Read total count from server\n                pagination.total = payload.totalElements;\n                if (pagination.pageSizeOptions.length === this.state.initialPageSizeLength) {\n                    pagination.pageSizeOptions.push(pagination.total.toString())\n                    // REORDER the numbers\n                    pagination.pageSizeOptions.sort((a, b) => a - b);\n                }\n                // Formating the data to be display\n                const DashboardData = payload.content.map(sprint => {\n                    const { name, startDate, endDate, state, nbIssues, bugs, usEngage, usRealise, stpEngage, stpRealise, completude, acceptanceUs, acceleration, projectName } = sprint;\n                    return {\n                        \"key\": sprint.id,\n                        name, startDate, endDate, state, nbIssues, bugs, usEngage, usRealise, stpEngage, stpRealise, completude, acceptanceUs, acceleration, projectName\n                    };\n                })\n                this.setState({\n                    loading: false,\n                    data: DashboardData,\n                    pagination,\n                });\n\n            })\n            .catch(err => {\n                console.log('err', err)\n            });\n\n    }\n    componentDidMount() {\n        this.fetch();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.boardId !== prevProps.boardId) {\n            this.fetch()\n        }\n    }\n\n    // HANDLING DATE CHANGES\n    onPickDate = (Value) => {\n        this.setState(Value)\n    }\n    onDatePicked = () => {\n        if (this.state.startDate && this.state.endDate) {\n            let params = this.state.params\n            params.startDate = this.state.startDate\n            params.endDate = this.state.endDate\n            this.fetch(params)\n        }\n    }\n\n    render() {\n        return (\n            <Col className='mt-1'>\n                <Row  >\n                    <Col sm={4} xs={12}>\n                        <ButtonGroup >\n                            <ExportExcel csvData={this.state.data} fileName={\"Extraction - \" + formatDate(moment())} columns={dashColumns} />\n                            <ReactToPrint\n                                trigger={() => <Button variant=\"danger\">  <i className=\"feather icon-file-text  mx-0 \" style={{ fontSize: \"25px \" }}></i> <span className=\"font-weight-bold\">Pdf</span></Button>}\n                                content={() => this.componentRef}\n                            />\n                        </ButtonGroup>\n                    </Col >\n                    <Col sm={8} xs={12} className=\"align-self-center text-right \">\n                        <DateRange onPickDate={this.onPickDate} />\n                        <Button onClick={this.onDatePicked} variant=\"outline-success\" className=\"btn-icon  btn-rounded ml-2\">\n                            <i className=\"feather icon-save\" aria-hidden=\"true\"></i>\n                        </Button>\n                    </Col>\n                </Row>\n\n                <Row className=\"mt-2 justify-content-center \">\n                    < PerfectScrollbar className='shadow-1 rounded ' ref={el => (this.componentRef = el)} >\n                        <Table columns={dashColumns}\n                            // className='shadow-1 rounded'\n                            //rowKey={record => record.registered}\n                            dataSource={this.state.data}\n                            pagination={this.state.pagination}\n                            loading={this.state.loading}\n                            onChange={this.handleTableChange}\n                        />\n                    </PerfectScrollbar >\n                </Row>\n            </Col>\n        );\n    }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}