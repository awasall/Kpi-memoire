{"version":3,"sources":["ComponentLib/Authentication/SignUp/SignUp.js","App/layout/parameters/AddUser.js"],"names":["SignUp","state","username","password","email","onSubmit","e","preventDefault","props","register","onChange","setState","target","name","value","this","className","isLoading","Loading","fontSize","color","placeholder","type","React","Component","mapDispatchToProps","connect","auth","AddUser","Row","Col"],"mappings":"4QAMMA,E,2MACFC,MAAQ,CACJC,SAAU,GACVC,SAAU,GACVC,MAAO,I,EAQXC,SAAW,SAAAC,GACPA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKR,Q,EAG7BS,SAAW,SAAAJ,GAAC,OAAI,EAAKK,SAAL,eAAiBL,EAAEM,OAAOC,KAAOP,EAAEM,OAAOE,S,wEAEhD,IAAD,EACiCC,KAAKd,MAAnCC,EADH,EACGA,SAAUC,EADb,EACaA,SAAUC,EADvB,EACuBA,MAC5B,OACI,yBAAKY,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,WACX,0BAAMA,UAAU,MAChB,0BAAMA,UAAU,QAChB,0BAAMA,UAAU,QAChB,0BAAMA,UAAU,OAEpB,yBAAKA,UAAU,QACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,uBAAGA,UAAU,0CADjB,qBAIED,KAAKP,MAAMS,UACT,kBAACC,EAAA,EAAD,CAASC,SAAU,GAAIC,MAAM,WAE5B,0BAAMf,SAAUU,KAAKV,UAClB,yBAAKW,UAAU,oBACX,2BAEIA,UAAU,eACVK,YAAY,MACZR,KAAK,QACLH,SAAUK,KAAKL,SACfI,MAAOV,KAIf,yBAAKY,UAAU,oBACX,2BACIM,KAAK,OACLN,UAAU,eACVK,YAAY,oBACZR,KAAK,WACLH,SAAUK,KAAKL,SACfI,MAAOZ,KAGf,yBAAKc,UAAU,oBACX,2BACIM,KAAK,WACLN,UAAU,eACVK,YAAY,eACZR,KAAK,WACLH,SAAUK,KAAKL,SACfI,MAAOX,KAGf,4BAAQa,UAAU,iDAAiDM,KAAK,UAAxE,oB,GAvEfC,IAAMC,WAsFrBC,EAAqB,CACvBhB,cAGWiB,eARS,SAAAzB,GAAK,MAAK,CAC9BgB,UAAWhB,EAAM0B,KAAKV,aAOcQ,EAAzBC,CAA6C1B,GC/E7C4B,UAXf,WACI,OACI,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD","file":"static/js/20.4dd84743.chunk.js","sourcesContent":["import React from 'react';\nimport './../../../assets/scss/style.scss';\nimport Loading from '../../../App/components/Loader/Loading';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { register } from '../../../store/actions/authentication';\nclass SignUp extends React.Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        email: \"\"\n    };\n\n    static propTypes = {\n        register: PropTypes.func.isRequired,\n        isLoading: PropTypes.bool.isRequired\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        this.props.register(this.state);\n    };\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        const { username, password, email } = this.state;\n        return (\n            <div className=\"auth-wrapper\">\n                <div className=\"auth-content\">\n                    <div className=\"auth-bg\">\n                        <span className=\"r\" />\n                        <span className=\"r s\" />\n                        <span className=\"r s\" />\n                        <span className=\"r\" />\n                    </div>\n                    <div className=\"card\">\n                        <div className=\"card-body text-center\">\n                            <div className=\"mb-4\">\n                                <i className=\"feather icon-user-plus auth-icon f-30\" />\n                                Ajout utilisateur\n                            </div>\n                            {(this.props.isLoading) ?\n                                <Loading fontSize={45} color=\"orange\" />\n                                :\n                                (<form onSubmit={this.onSubmit}>\n                                    <div className=\"input-group mb-3\">\n                                        <input\n                                            // type=\"email\"\n                                            className=\"form-control\"\n                                            placeholder=\"Nom\"\n                                            name=\"email\"\n                                            onChange={this.onChange}\n                                            value={email}\n                                        />\n                                    </div>\n\n                                    <div className=\"input-group mb-3\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            placeholder=\"Nom d'utilisateur\"\n                                            name=\"username\"\n                                            onChange={this.onChange}\n                                            value={username}\n                                        />\n                                    </div>\n                                    <div className=\"input-group mb-4\">\n                                        <input\n                                            type=\"password\"\n                                            className=\"form-control\"\n                                            placeholder=\"Mot de passe\"\n                                            name=\"password\"\n                                            onChange={this.onChange}\n                                            value={password}\n                                        />\n                                    </div>\n                                    <button className=\"btn btn-success shadow-2 mb-4 font-weight-bold\" type=\"submit\">Ajouter</button>\n                                </form>\n                                )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLoading: state.auth.isLoading\n});\n\nconst mapDispatchToProps = {\n    register\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport Aux from '../../../hoc/_Aux/index';\nimport SignUp from '../../../ComponentLib/Authentication/SignUp/SignUp';\n\n\nfunction AddUser() {\n    return (\n        <Aux>\n            <Row>\n                <Col>\n                    <SignUp />\n                </Col>\n            </Row>\n        </Aux>\n    )\n}\nexport default AddUser;"],"sourceRoot":""}