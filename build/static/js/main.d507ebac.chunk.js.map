{"version":3,"sources":["App/layout/ScrollToTop/index.js","App/components/Alerts/Alerts.js","App/index.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/UIReducer.js","store/reducers/projectReducer.js","store/reducers/messagesReducer.js","store/reducers/rootReducer.js","index.js","store/actions/messages.js","store/actions.js","menu-items.js","App/components/Loader/index.js","hoc/_Aux/index.js","store/actions/authentication.js","App/components/Loader/Logo.js","App/utilitity/index.js","store/actions/projectActions.js","constants/config.js"],"names":["ScrollToTop","prevProps","this","props","location","window","scrollTo","children","React","Component","withRouter","Alerts","alert","messages","error","message","prevMess","prevError","success","timeout","transition","transitions","SCALE","msg","connect","state","withAlert","Signin","lazy","AdminLayout","Loadable","loader","loading","Loader","App","onTryAutoSignup","auth","isLoadingUser","className","forever","duration","Logo","fontWeight","big","fallback","Switch","Route","path","exact","name","render","isAuthenticated","component","Redirect","to","dispatch","authCheckState","Boolean","hostname","match","initState","authError","localStorage","getItem","isLoading","accessToken","authSuccess","action","payload","setItem","updateObject","userLoaded","user","loadingFinished","authReducer","type","actionTypes","console","log","initialState","isOpen","isTrigger","config","isFullScreen","reducer","trigger","open","collapseMenu","menu","triggerIndex","indexOf","id","filter","item","layout","category","categories","undefined","projects","projectReducer","code","rootReducer","combineReducers","ui","UIReducer","CREATE_MESSAGE","GET_ERRORS","AUTH_ERROR","project","store","createStore","composeWithDevTools","applyMiddleware","thunk","app","BrowserRouter","basename","template","AlertTemplate","position","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","createMessage","authErrorMess","errorMess","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","USER_LOADING_START","USER_LOADED","USER_LOADING_FAIL","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","REGISTER_START","PASSWORD_CHANGE_FAILED","PASSWORD_CHANGE_SUCCESS","PASSWORD_CHANGE_START","CATEGORY_LOADING","CATEGORY_LOADED","initNavigation","title","icon","url","navigation","items","JSON","parse","stringify","resetNavigation","setUpSideBar","role","forEach","categoryNav","replace","toLowerCase","push","addCategoriesToNav","username","parametersMenuItemChild","length","upadateParametersNav","Aux","checkAuthTimeout","expirationTime","setTimeout","logout","expirationDate","Date","getTime","loadUser","login","password","stayConnected","body","axios","post","apiBaseUrl","headers","res","HOUR_IN_MILLISECOND","data","catch","err","token","getState","get","tokenConfig","getCategories","removeItem","register","email","registerSucces","changePassword","passwordData","newPassword1","oldPassword","style","backgroundColor","formatDate","moment","format","query","params","theQuery","page","pageSize","sortField","sortOrder","startDate","endDate","initToken","oldObject","updatedProperties","Axios","defaultPath","preLayout","layoutType","navIconColor","headerBackColor","navBackColor","navBrandColor","navBackImage","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navListTitleHide","configBlock","layout6Background","layout6BackSize","process","REACT_APP_API_BASE_URL"],"mappings":"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","file":"static/js/main.d507ebac.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router';\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    render() {\n        return this.props.children\n    }\n}\n\nexport default withRouter(ScrollToTop);","import React, { Component, Fragment } from \"react\";\nimport { withAlert } from \"react-alert\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { transitions } from 'react-alert';\n\nclass Alerts extends Component {\n    static propTypes = {\n        messages: PropTypes.object.isRequired\n    };\n\n    componentDidUpdate(prevProps) {\n        const alert = this.props.alert;\n        const { error, message } = this.props.messages;\n        const prevMess = prevProps.messages.message;\n        const prevError = prevProps.messages.error;\n        if (message !== prevMess) {\n            alert.success(message, {\n                timeout: 5000,\n                // custom timeout just for this one alert\n                transition: transitions.SCALE\n            }\n            );\n        }\n        if (error !== prevError) {\n            //  MY ERRORS\n            if (error.msg) alert.error(error.msg);\n        }\n\n    }\n\n    render() {\n        return <Fragment />;\n    }\n}\n\nconst mapStateToProps = state => ({\n    messages: state.messages,\n});\n\nexport default connect(mapStateToProps)(withAlert()(Alerts));\n","import React, { Component, Suspense } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Loadable from 'react-loadable';\nimport { connect } from 'react-redux';\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\n\nimport Loader from './components/Loader'\nimport Aux from \"../hoc/_Aux\";\nimport ScrollToTop from './layout/ScrollToTop';\nimport Alerts from './components/Alerts/Alerts';\nimport { authCheckState } from '../store/actions/authentication';\nimport Fade from 'react-reveal';\nimport Wobble from 'react-reveal/Wobble';\n\n//CSS OF THE ENTIRE APP\nimport './layout/AdminLayout/app.scss';\nimport './layout/AdminLayout/myApp.css';\nimport Logo from './components/Loader/Logo';\n\nconst Signin = React.lazy(() => import('../ComponentLib/Authentication/SignIn/SignIn'));\n\nconst AdminLayout = Loadable({\n    loader: () => import('./layout/AdminLayout'),\n    loading: Loader\n});\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.props.onTryAutoSignup();\n    }\n\n    render() {\n        if (this.props.auth.isLoadingUser)\n            //if (true)\n            return (\n                //<Loading fontSize={100} color=\"orange\" className=\"middle-page\"> <h3> Chargement... </h3> </Loading>\n                <div className=\"middle-page\">\n                    <Wobble forever={true} duration={1500} >\n                        <Logo fontWeight={600} className=\"f-60 px-1\" />\n                    </Wobble>\n                    <h3> Chargement... </h3>\n                </div>\n            )\n        else\n            return (\n                <Aux>\n                    <Fade big>\n                        <ScrollToTop>\n                            <Suspense fallback={<Loader />}>\n                                <Alerts />\n                                <Switch>\n                                    {/* //auth/signin-1 */}\n                                    <Route path=\"/auth/signin\" exact={true} name='connexion' render={() => <Fade ><Signin /></Fade>} />\n                                    {this.props.auth.isAuthenticated ?\n                                        <Route path=\"/\" component={AdminLayout} /> : <Redirect to='/auth/signin' />\n                                    }\n                                </Switch>\n                            </Suspense>\n                        </ScrollToTop>\n                    </Fade>\n                </Aux>\n            );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(authCheckState()),\n    }\n}\nexport default connect(state => ({ auth: state.auth }), mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions\";\nimport updateObject from '../../App/utilitity';\n\nconst initState = {\n  authError: null,\n  //AUTH\n  isAuthenticated: localStorage.getItem(\"token\") ? true : false,\n  isLoading: false,\n  isLoadingUser: false,\n  accessToken: localStorage.getItem(\"token\"),\n  // user: null\n}\n/*\n// FUNCTIOND FOR AUTH REDUCER\nconst loading = (state, action) => {\n  return updateObject(state, {\n    isLoading: true\n  });\n}\n\nconst userLoaded = (state, action) => {\n  return updateObject(state, {\n    isAuthenticated: true,\n    isLoading: false,\n    user: action.payload\n  });\n}\n\n*/\n\nconst authSuccess = (state, action) => {\n  //  localStorage.setItem(\"id\", action.payload.user.id); // save user's id\n  const { accessToken } = action.payload;\n  localStorage.setItem(\"token\", accessToken);\n  return updateObject(state, {\n    // user,\n    //accessToken,\n    isAuthenticated: true,\n    isLoading: false\n  });\n}\n\n//HANDLING USER LOADING\nconst userLoaded = (state, action) => {\n  return updateObject(state, {\n    isAuthenticated: true,\n    isLoadingUser: false,\n    user: action.payload\n  });\n}\nconst loading = (state, name) => {\n  return updateObject(state, {\n    [name]: true\n  });\n}\nconst loadingFinished = (state, name) => {\n  return updateObject(state, {\n    [name]: false\n  });\n}\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n\n    case actionTypes.LOGIN_SUCCESS:\n      return authSuccess(state, action)\n\n    //HANDLING  LOADING START\n    case actionTypes.REGISTER_START:\n    case actionTypes.LOGIN_START:\n    case actionTypes.PASSWORD_CHANGE_START:\n      return loading(state, 'isLoading');\n\n    case actionTypes.USER_LOADING_START:\n      return loading(state, 'isLoadingUser');\n\n    case actionTypes.USER_LOADED:\n      return userLoaded(state, action);\n\n    // HADLING LOADING STOP\n    case actionTypes.REGISTER_SUCCESS:\n    case actionTypes.REGISTER_FAIL:\n    case actionTypes.LOGIN_FAIL:\n    case actionTypes.PASSWORD_CHANGE_SUCCESS:\n    case actionTypes.PASSWORD_CHANGE_FAILED:\n      return loadingFinished(state, 'isLoading')\n\n    case actionTypes.USER_LOADING_FAIL:\n      return loadingFinished(state, 'isLoadingUser');\n\n    //LOGOUT  \n    case actionTypes.LOGOUT_SUCCESS:\n      console.log('signout success');\n      return initState\n\n    // // -----------AUTH---------------//\n\n    // case actionTypes.USER_LOADED:\n    //   return userLoaded(state, action);\n    // case actionTypes.LOGIN_SUCCESS:\n    //   return authSuccess(state, action);\n    // case actionTypes.LOGIN_FAIL:\n    // case actionTypes.LOGOUT_SUCCESS:\n    //   return authFail(state, action);\n    default:\n      return state\n  }\n};\n\nexport default authReducer;\n","import * as actionTypes from '../actions';\nimport config from '../../constants/config';\n\nconst initialState = {\n    isOpen: [], //for active default menu\n    isTrigger: [], //for active default menu, set blank for horizontal\n    ...config,\n    isFullScreen: false, // static can't change\n\n};\n\nconst reducer = (state = initialState, action) => {\n    let trigger = [];\n    let open = [];\n\n    switch (action.type) {\n        case actionTypes.COLLAPSE_MENU:\n            return {\n                ...state,\n                collapseMenu: !state.collapseMenu\n            };\n        case actionTypes.COLLAPSE_TOGGLE:\n            if (action.menu.type === 'sub') {\n                open = state.isOpen;\n                trigger = state.isTrigger;\n\n                const triggerIndex = trigger.indexOf(action.menu.id);\n                if (triggerIndex > -1) {\n                    open = open.filter(item => item !== action.menu.id);\n                    trigger = trigger.filter(item => item !== action.menu.id);\n                }\n\n                if (triggerIndex === -1) {\n                    open = [...open, action.menu.id];\n                    trigger = [...trigger, action.menu.id];\n                }\n            } else {\n                open = state.isOpen;\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\n            }\n\n            return {\n                ...state,\n                isOpen: open,\n                isTrigger: trigger\n            };\n        case actionTypes.NAV_CONTENT_LEAVE:\n            return {\n                ...state,\n                isOpen: open,\n                isTrigger: trigger,\n            };\n        case actionTypes.NAV_COLLAPSE_LEAVE:\n            if (action.menu.type === 'sub') {\n                open = state.isOpen;\n                trigger = state.isTrigger;\n\n                const triggerIndex = trigger.indexOf(action.menu.id);\n                if (triggerIndex > -1) {\n                    open = open.filter(item => item !== action.menu.id);\n                    trigger = trigger.filter(item => item !== action.menu.id);\n                }\n                return {\n                    ...state,\n                    isOpen: open,\n                    isTrigger: trigger,\n                };\n            }\n            return { ...state };\n        case actionTypes.FULL_SCREEN:\n            return {\n                ...state,\n                isFullScreen: !state.isFullScreen\n            };\n        case actionTypes.FULL_SCREEN_EXIT:\n            return {\n                ...state,\n                isFullScreen: false\n            };\n        case actionTypes.CHANGE_LAYOUT:\n            return {\n                ...state,\n                layout: action.layout\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","\nimport * as actionTypes from \"../actions\"\nimport updateObject from \"../../App/utilitity\";\n\nconst initialState = {\n    category: {\n        isLoading: false,\n        categories: undefined\n    },\n    projects: null\n}\n\nconst projectReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.CATEGORY_LOADING:\n            return updateObject(state,\n                {\n                    category: {\n                        isLoading: true\n                    }\n                }\n            )\n        case actionTypes.CATEGORY_LOADED:\n            return updateObject(state,\n                {\n                    category: {\n                        //not necessary should be removed in futur releases\n                        categories: action.payload,\n                        isLoading: false\n                    }\n                }\n            )\n\n        default:\n            return state\n    }\n}\nexport default projectReducer","import { CREATE_MESSAGE, GET_ERRORS, AUTH_ERROR } from \"../actions\";\nimport updateObject from \"../../App/utilitity\";\n\nconst initialState = {\n  message: undefined,\n  error: {\n    msg: {},\n    code: undefined\n  }\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_MESSAGE:\n      return updateObject(state, { message: action.message });\n\n    case GET_ERRORS:\n    case AUTH_ERROR:\n      return updateObject(state,\n        {\n          error:\n          {\n            msg: action.payload.message,\n            code: action.payload.code\n          }\n        });\n    default:\n      return state;\n  }\n}\n","import authReducer from './authReducer'\nimport UIReducer from './UIReducer';\nimport projectReducer from './projectReducer';\n\nimport { combineReducers } from 'redux'\n\nimport messagesReducer from './messagesReducer';\n\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  ui: UIReducer,\n  messages: messagesReducer,\n  project: projectReducer\n});\n\nexport default rootReducer;\n\n// the key name will be the data property on the state object","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App/index';\nimport * as serviceWorker from './serviceWorker';\nimport config from './constants/config';\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport rootReducer from './store/reducers/rootReducer'\n\nconst store = createStore(rootReducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n);\n\n// Alert Options\nconst alertOptions = {\n    position: \"top center\"\n};\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename={config.basename}>\n            <AlertProvider template={AlertTemplate} {...alertOptions}>\n                {/* basename=\"/datta-able\" */}\n                <App />\n            </AlertProvider>\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { CREATE_MESSAGE, AUTH_ERROR } from \"../actions\";\n\n// CREATE MESSAGE\nexport const createMessage = message => {\n  return {\n    type: CREATE_MESSAGE,\n    message\n  };\n};\n\n// RETURN ERRORS\nexport const authErrorMess = (error) => {\n  return {\n    type: AUTH_ERROR,\n    payload: error\n  };\n};\nexport const errorMess = (error) => {\n  return {\n    type: AUTH_ERROR,\n    payload: error\n  };\n};\n","export const COLLAPSE_MENU = 'COLLAPSE_MENU';\nexport const COLLAPSE_TOGGLE = 'COLLAPSE_TOGGLE';\nexport const FULL_SCREEN = 'FULL_SCREEN';\nexport const FULL_SCREEN_EXIT = 'FULL_SCREEN_EXIT';\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const NAV_CONTENT_LEAVE = 'NAV_CONTENT_LEAVE';\nexport const NAV_COLLAPSE_LEAVE = 'NAV_COLLAPSE_LEAVE';\n\n//AUTH\nexport const USER_LOADING_START = \"USER_LOADING_START\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const USER_LOADING_FAIL = \"USER_LOADING_FAIL\";\nexport const LOGIN_START = \"LOGIN_START\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_ERROR = \"LOGOUT_ERROR\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const REGISTER_START = \"REGISTER_START\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const PASSWORD_CHANGE_FAILED = 'PASSWORD_CHANGE_FAILED';\nexport const PASSWORD_CHANGE_SUCCESS = 'PASSWORD_CHANGE_SUCCESS';\nexport const PASSWORD_CHANGE_START = 'PASSWORD_CHANGE_START';\n\n//CATEGORIES\nexport const CATEGORY_LOADING = \"CATEGORY_LOADING\";\nexport const CATEGORY_LOADED = \"CATEGORY_LOADED\";\n\n// ALERTS\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";","export const initNavigation = [\n    {\n        id: 'navigation',\n        title: 'Navigation',\n        type: 'group',\n        icon: 'icon-navigation',\n        children: [\n            {\n                id: 'dashboard',\n                title: 'Dashboard',\n                type: 'item',\n                url: '/dashboard',\n                icon: 'feather icon-home',\n            }\n        ]\n    },\n    {\n        id: 'categorie',\n        title: 'CATEGORIE',\n        type: 'group',\n        icon: 'icon-ui',\n        children: [\n            {\n                id: 'plateaux',\n                title: 'Plateaux',\n                type: 'collapse',\n                icon: 'feather icon-briefcase',\n                children: [\n                    {\n                        id: 'uncategorized',\n                        title: 'Non catégorisés',\n                        type: 'item',\n                        url: '/projets/uncategorized'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        id: 'parameter',\n        title: 'PARAMETRES',\n        type: 'group',\n        icon: 'icon-group',\n        children: [\n            {\n                id: 'update-db',\n                title: 'Mise à jour de la BD',\n                type: 'item',\n                url: '/update-db',\n                icon: 'feather icon-refresh-cw'\n            },\n            {\n                id: 'account',\n                title: 'Gestion comptes',\n                type: 'collapse',\n                icon: 'feather icon-users',\n                children: [\n                    {\n                        id: 'pwdChange',\n                        title: 'Mot de passe',\n                        type: 'item',\n                        icon: 'feather icon-lock',\n                        url: '/changer-de-mot-de-passe'\n                    }\n                ]\n            }\n        ]\n    }\n\n]\n\nconst navigation = { items: JSON.parse(JSON.stringify(initNavigation)) }\n\nexport function resetNavigation() {\n    navigation.items = JSON.parse(JSON.stringify(initNavigation))\n}\n\nfunction addCategoriesToNav(categories) {\n    // const plateaux = navigation.items[1].children[0].children\n    // // to prevent readding categories by rerendering\n    //  if (plateaux.length === 1)\n    categories.forEach(category => {\n        let categoryNav = { type: 'item' }\n        categoryNav.id = category.name.replace(/\\s+/g, '-').toLowerCase()\n        categoryNav.title = category.name\n        categoryNav.url = \"/projets/category/\" + category.id\n        // adding the category to the navigation object\n        navigation.items[1].children[0].children.push(categoryNav)\n    })\n}\n\n// ONLY ADMIN CAN CREATE ACCOUNTS\nfunction upadateParametersNav(username) {\n    const parametersMenuItemChild = navigation.items[navigation.items.length - 1].children[1].children\n    if (username === \"admin\")\n        parametersMenuItemChild.push({\n            id: 'addUser',\n            title: 'Ajout utilisateur',\n            type: 'item',\n            icon: 'feather icon-user-plus',\n            url: '/ajout-utilisateur'\n        })\n}\n\nexport function setUpSideBar(categories, role) {\n    //adding categories to sidebar navigation\n    addCategoriesToNav(categories)\n    upadateParametersNav(role)\n}\nexport default navigation;\n","import React from 'react';\n\nconst loader = () => {\n    return (\n        <div className=\"loader-bg\">\n            <div className=\"loader-track\">\n                <div className=\"loader-fill\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default loader;","const Aux = (props) => props.children;\n\nexport default Aux;","import axios from \"axios\";\n// import { authErrorMess, createMessage } from \"./messages\";\n\nimport * as actionTypes from \"../actions\";\nimport config from \"../../constants/config\";\nimport { tokenConfig } from \"../../App/utilitity\";\nimport { authErrorMess, createMessage, errorMess } from \"./messages\";\nimport { resetNavigation } from \"../../menu-items\";\nimport { getCategories } from \"./projectActions\";\n\n\n// CONST \nconst HOUR_IN_MILLISECOND = (3600 * 1000)\n\n//Auth SUCCESS \nconst authSuccess = res => {\n    return {\n        type: actionTypes.LOGIN_SUCCESS,\n        payload: res.data\n    }\n}\n\n// CHECK \nexport const checkAuthTimeout = expirationTime => {// TIME IN SECOND\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000) //CONVERTING TO MILLISECOND\n    }\n}\n// For checking state if timeout is'nt reached \n//and the token in localstorage is correct by getting corresponding user\nexport const authCheckState = () => (dispatch) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        const expirationDate = new Date(localStorage.getItem('expirationDate'));\n        if (expirationDate <= new Date()) {\n            // TIME IS OUT\n            dispatch(logout());\n        } else {\n            // UPDATE TIMEOUT INFO\n            dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            dispatch(loadUser());\n        }\n    } else {\n        dispatch(logout());\n    }\n};\n\n// LOGIN USER\nexport const login = (username, password, stayConnected) => dispatch => {\n    dispatch({ type: actionTypes.LOGIN_START });\n    // Headers\n    const headers = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n        }\n    };\n\n    let body = {\n        username,\n        password\n    }\n    axios\n        .post(config.apiBaseUrl + \"/api/auth/signin\", body, headers)\n        .then(res => {\n            if (stayConnected) {\n                const expirationDate = new Date(new Date().getTime() + HOUR_IN_MILLISECOND * 24); // ONE DAY\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(checkAuthTimeout(3600 * 24));\n            } else {\n                const expirationDate = new Date(new Date().getTime() + HOUR_IN_MILLISECOND * 3); // ONE 3 HOURS\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(checkAuthTimeout(3 * 3600));\n            }\n            dispatch(loadUser(res.data.accessToken))\n            dispatch(authSuccess(res))\n        })\n        .catch(err => {\n            console.log('login error', err)\n            dispatch(errorMess({ message: 'username ou mot de passe incorrect' }));\n            dispatch({\n                type: actionTypes.LOGIN_FAIL\n            });\n            //dispatch(authErrorMess(err.response.data, err.response.status));\n        });\n};\n\n// CHECK TOKEN & LOAD USER\n//Auth Loaded\nconst userLoaded = res => ({\n    type: actionTypes.USER_LOADED,\n    payload: res.data\n})\n// GETTING user and CATEGORIES (categories will setup navigation sidebar items)\nexport const loadUser = (token = undefined) => (dispatch, getState) => {\n    // User Loading\n    dispatch({ type: actionTypes.USER_LOADING_START })\n    axios\n        .get(`${config.apiBaseUrl}/api/user/current`, tokenConfig(token))\n        .then(res => {\n            dispatch(userLoaded(res));\n            // GETTING CATEGORIES\n            dispatch(getCategories())\n        })\n        .catch(err => {\n            dispatch(authErrorMess(err));\n            dispatch({ type: actionTypes.USER_LOADING_FAIL });\n            dispatch(logout());\n        });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n    //Reset navigation bar\n    resetNavigation()\n    //Reset token and expiration date\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem('expirationDate');\n    // REDIRECT TO LOGIN PAGE\n    dispatch({\n        type: actionTypes.LOGOUT_SUCCESS\n    });\n};\n\n// SIGN UP USER\nconst registerSucces = res => {\n    console.log('register payload', res)\n    return {\n        type: actionTypes.REGISTER_SUCCESS,\n        payload: res.data\n    }\n}\n\n//\nexport const register = ({ username, password, email }) => dispatch => {\n    dispatch({ type: actionTypes.REGISTER_START })\n\n    axios\n        .post(config.apiBaseUrl + \"/api/auth/signup\", { username, password, name: email }, tokenConfig())\n        .then(res => {\n            dispatch(registerSucces(res));\n            dispatch(createMessage(\"Utilisateur créé avec succès\"))\n        })\n        .catch(err => {\n            console.log(err)\n            dispatch({\n                type: actionTypes.REGISTER_FAIL\n            });\n            //dispatch(authErrorMess(err));\n            dispatch(errorMess({ message: 'Utilisateur déjà existant ou mot de passe trop court(<6) ' }));\n        });\n}\n\n\n// CHANGE PASSWORD\nexport const changePassword = (passwordData) => (dispatch, getState) => {\n    dispatch({\n        type: actionTypes.PASSWORD_CHANGE_START\n    })\n    axios\n        .post(`${config.apiBaseUrl}/api/auth/updatePassword?password=${passwordData.newPassword1}&oldpassword=${passwordData.oldPassword}`, null, tokenConfig())\n        .then(res => {\n            dispatch(createMessage(\"Mot de passe changé avec Success\"))\n            dispatch({\n                type: actionTypes.PASSWORD_CHANGE_SUCCESS\n            })\n        })\n        .catch(err => {\n            console.log('err.data', err.data)\n            console.log('err.dataded', err)\n            console.log('err.dataded', err.message)\n            dispatch(authErrorMess(err));\n            dispatch({\n                type: actionTypes.PASSWORD_CHANGE_FAILED\n            });\n        });\n};","import React from 'react'\n\nexport default function Logo(props) {\n    return (\n        <div className=\"text-center text-warning \">\n            <span className={props.className} style={{ backgroundColor: \"black\", fontWeight: props.fontWeight }} > DIF</span>\n        </div>\n    )\n}\n","//Query creator\n//const DATE_FORMAT = 'YYYY-MM-DD';\nexport const formatDate = (moment) => {\n    return moment.format('YYYY-MM-DD')\n};\nexport const query = (params) => {\n    let theQuery = ''\n    if (params.page && params.pageSize)\n        theQuery += `?page=${params.page}&size=${params.pageSize}`\n    if (params.sortField)\n        theQuery += `&sort=${params.sortField},${params.sortOrder === 'descend' ? 'desc' : 'asc'}`\n    if (params.state && params.state.length !== 0)\n        theQuery += `&state=${params.state[0]}`\n    if (params.startDate && params.endDate) {\n        if (theQuery !== '')\n            theQuery += \"&\"\n        else\n            theQuery += \"?\"\n        theQuery += `startPeriod=${formatDate(params.startDate)}&endPeriod=${formatDate(params.endDate)}`\n        console.log('theQuery', theQuery)\n    }\n    return theQuery;\n}\n\n// Update the state \nconst updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}\n\n// Setup config with token - helper function\n//initToken params is used by loaduser action if the user is logged in for the first time\nexport const tokenConfig = (initToken = undefined) => {\n    // Get token from state\n    let token = localStorage.getItem(\"token\")\n\n    if (initToken)\n        token = initToken\n\n    // Headers\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    // If token, add to headers config\n    if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n\n    return config;\n};\n\nexport const calculateAge = (birthday) => { // birthday is a date\n    birthday = new Date(birthday);\n    var ageDifMs = Date.now() - birthday.getTime();\n    var ageDate = new Date(ageDifMs); // miliseconds from epoch\n    return Math.abs(ageDate.getUTCFullYear() - 1970);\n}\n\n//CHECK IF AN OBJECT IS EMPTY , mean equal to \"{}\" ; \n// return true if it's empty\nexport const objectIsEmpty = (obj) => { // birthday is a date\n    return (Object.entries(obj).length === 0 && obj.constructor === Object)\n}\n\n//compute the date \nexport const dateFr = () => {\n    // les noms de jours / mois\n    let jours = [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"];\n    let mois = [\"janvier\", \"fevrier\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"aout\", \"septembre\", \"octobre\", \"novembre\", \"decembre\"];\n    // on recupere la date\n    let date = new Date();\n    // on construit le message\n    let message = jours[date.getDay()] + \" \";   // nom du jour\n    message += date.getDate() + \" \";   // numero du jour\n    message += mois[date.getMonth()] + \" \";   // mois\n    message += date.getFullYear();\n    return message;\n}\n\nexport default updateObject","// GETTING CATEGORIES\nimport * as actionTypes from \"../actions\"\nimport Axios from \"axios\";\nimport config from \"../../constants/config\";\nimport { errorMess } from \"./messages\";\nimport { tokenConfig } from \"../../App/utilitity\";\nimport { setUpSideBar } from \"../../menu-items\";\n\n\nexport const getCategories = () => (dispatch, getState) => {\n    dispatch({ type: actionTypes.CATEGORY_LOADING });\n    Axios\n        .get(config.apiBaseUrl + \"/category\", tokenConfig())\n        .then(res => {\n            dispatch({ type: actionTypes.CATEGORY_LOADED, payload: res.data });\n            // B.Logic of navigation sidebar - \n            //adding categories to sidebar navigation\n            setUpSideBar(res.data, getState().auth.user.username)\n        })\n        .catch(err => {\n            console.error(err)\n            dispatch(errorMess(err));\n        });\n};\n\n","export default {\n    defaultPath: '/page-introuvable',\n    basename: '/jira-kpi', // only at build time to set, like /datta-able\n    layout: 'vertical', // vertical, horizontal (not available in lite version)\n    preLayout: null, // (not available in lite version)\n    collapseMenu: false, // mini-menu\n    layoutType: 'menu-light', // menu-dark, (menu-light, dark are not available in lite version)\n    navIconColor: false,\n    headerBackColor: 'header-default', // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\n    navBackColor: 'navbar-default', // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\n    navBrandColor: 'brand-default', // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\n    navBackImage: false, // not available in lite version\n    rtlLayout: false, // not available in lite version\n    navFixedLayout: true,\n    headerFixedLayout: false, // not available in lite version\n    boxLayout: false,\n    navDropdownIcon: 'style1', // style1, (style2, style3 are not available in lite version)\n    navListIcon: 'style1', // style1, (style2, style3, style4, style5, style6 are not available in lite version)\n    navActiveListColor: 'active-default', // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\n    navListTitleColor: 'title-default', // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\n    navListTitleHide: false, // not available in lite version\n    configBlock: false, // not available in lite version\n    layout6Background: 'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\n    layout6BackSize: '', // used only for pre-layout = layout-6\n\n    //MY CONFIGS\n    apiBaseUrl: process.env.REACT_APP_API_BASE_URL || 'http://localhost:9090',\n    //apiBaseUrl: 'http://jirakpi-backend-jirakpi.k8s-test.orange-sonatel.com',\n    accessToken: 'accessToken'\n};\n"],"sourceRoot":""}